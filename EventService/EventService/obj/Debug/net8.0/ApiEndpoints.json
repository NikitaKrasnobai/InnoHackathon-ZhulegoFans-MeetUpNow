[
  {
    "ContainingType": "Presentation.Controllers.EventsController",
    "Method": "AddEventAsync",
    "RelativePath": "api/Events",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventDTO",
        "Type": "Contract.EventDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.EventDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsController",
    "Method": "GetEventAsync",
    "RelativePath": "api/Events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Contract.EventDTO, Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsController",
    "Method": "GetEventByIdAsync",
    "RelativePath": "api/Events/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.EventDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsController",
    "Method": "DeleteEventAsync",
    "RelativePath": "api/Events/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EventsController",
    "Method": "UpdateEventAsync",
    "RelativePath": "api/Events/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "eventDTO",
        "Type": "Contract.EventDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.EventDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsTablesController",
    "Method": "AddEventsTableAsync",
    "RelativePath": "api/EventsTables",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventsTableDTO",
        "Type": "Contract.EventsTableDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.EventsTableDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsTablesController",
    "Method": "GetEventsTableAsync",
    "RelativePath": "api/EventsTables",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Contract.EventsTableDTO, Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsTablesController",
    "Method": "GetEventsTableByIdAsync",
    "RelativePath": "api/EventsTables/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.EventsTableDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.EventsTablesController",
    "Method": "DeleteEventsTableAsync",
    "RelativePath": "api/EventsTables/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EventsTablesController",
    "Method": "UpdateEventsTableAsync",
    "RelativePath": "api/EventsTables/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "eventsTableDTO",
        "Type": "Contract.EventsTableDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.EventsTableDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PlacesController",
    "Method": "AddPlaceAsync",
    "RelativePath": "api/Places",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "placeDTO",
        "Type": "Contract.PlaceDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.PlaceDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PlacesController",
    "Method": "GetPlaceAsync",
    "RelativePath": "api/Places",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Contract.PlaceDTO, Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PlacesController",
    "Method": "GetPlaceByIdAsync",
    "RelativePath": "api/Places/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.PlaceDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PlacesController",
    "Method": "DeletePlaceAsync",
    "RelativePath": "api/Places/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PlacesController",
    "Method": "UpdatePlaceAsync",
    "RelativePath": "api/Places/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "placeDTO",
        "Type": "Contract.PlaceDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.PlaceDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PurposeController",
    "Method": "AddPurposeAsync",
    "RelativePath": "api/Purposes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "purposeDTO",
        "Type": "Contract.PurposeDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.PurposeDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PurposeController",
    "Method": "GetPurposeAsync",
    "RelativePath": "api/Purposes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Contract.PurposeDTO, Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PurposeController",
    "Method": "GetPurposeByIdAsync",
    "RelativePath": "api/Purposes/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.PurposeDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Presentation.Controllers.PurposeController",
    "Method": "DeletePurposeAsync",
    "RelativePath": "api/Purposes/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PurposeController",
    "Method": "UpdatePurposeAsync",
    "RelativePath": "api/Purposes/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "purposeDTO",
        "Type": "Contract.PurposeDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Contract.PurposeDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]